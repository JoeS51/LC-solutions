class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """

        openBracket = []
        bracketMap = {')': '(', ']': '[', '}': '{'}

        for i in s: 
            if i in bracketMap.values():
                openBracket.append(i)
            elif i in bracketMap.keys():
                if openBracket == [] or openBracket.pop() != bracketMap[i]:
                    return False

        return openBracket == []
        
                  #map the searchable closing brackets as keys and their coresponding values being the only acceptable
        #iterate through, if i is a value, push to stack
        #if i is a key, first check if empty or pop stack to compare
        #return true IF bracket is empty

        #Map + Stack logic
